// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vecosy.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetConfigRequest struct {
	AppName              string   `protobuf:"bytes,1,opt,name=appName,proto3" json:"appName,omitempty"`
	AppVersion           string   `protobuf:"bytes,2,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	Environment          string   `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigRequest) Reset()         { *m = GetConfigRequest{} }
func (m *GetConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetConfigRequest) ProtoMessage()    {}
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4b068b76ab253eb, []int{0}
}

func (m *GetConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigRequest.Unmarshal(m, b)
}
func (m *GetConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigRequest.Merge(m, src)
}
func (m *GetConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetConfigRequest.Size(m)
}
func (m *GetConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigRequest proto.InternalMessageInfo

func (m *GetConfigRequest) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *GetConfigRequest) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *GetConfigRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

type GetConfigResponse struct {
	ConfigContent        string   `protobuf:"bytes,1,opt,name=configContent,proto3" json:"configContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigResponse) Reset()         { *m = GetConfigResponse{} }
func (m *GetConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetConfigResponse) ProtoMessage()    {}
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4b068b76ab253eb, []int{1}
}

func (m *GetConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigResponse.Unmarshal(m, b)
}
func (m *GetConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigResponse.Marshal(b, m, deterministic)
}
func (m *GetConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigResponse.Merge(m, src)
}
func (m *GetConfigResponse) XXX_Size() int {
	return xxx_messageInfo_GetConfigResponse.Size(m)
}
func (m *GetConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigResponse proto.InternalMessageInfo

func (m *GetConfigResponse) GetConfigContent() string {
	if m != nil {
		return m.ConfigContent
	}
	return ""
}

type GetFileResponse struct {
	FileContent          []byte   `protobuf:"bytes,1,opt,name=fileContent,proto3" json:"fileContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFileResponse) Reset()         { *m = GetFileResponse{} }
func (m *GetFileResponse) String() string { return proto.CompactTextString(m) }
func (*GetFileResponse) ProtoMessage()    {}
func (*GetFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4b068b76ab253eb, []int{2}
}

func (m *GetFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFileResponse.Unmarshal(m, b)
}
func (m *GetFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFileResponse.Marshal(b, m, deterministic)
}
func (m *GetFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFileResponse.Merge(m, src)
}
func (m *GetFileResponse) XXX_Size() int {
	return xxx_messageInfo_GetFileResponse.Size(m)
}
func (m *GetFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFileResponse proto.InternalMessageInfo

func (m *GetFileResponse) GetFileContent() []byte {
	if m != nil {
		return m.FileContent
	}
	return nil
}

type GetFileRequest struct {
	AppName              string   `protobuf:"bytes,1,opt,name=appName,proto3" json:"appName,omitempty"`
	AppVersion           string   `protobuf:"bytes,2,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	FilePath             string   `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFileRequest) Reset()         { *m = GetFileRequest{} }
func (m *GetFileRequest) String() string { return proto.CompactTextString(m) }
func (*GetFileRequest) ProtoMessage()    {}
func (*GetFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4b068b76ab253eb, []int{3}
}

func (m *GetFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFileRequest.Unmarshal(m, b)
}
func (m *GetFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFileRequest.Marshal(b, m, deterministic)
}
func (m *GetFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFileRequest.Merge(m, src)
}
func (m *GetFileRequest) XXX_Size() int {
	return xxx_messageInfo_GetFileRequest.Size(m)
}
func (m *GetFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFileRequest proto.InternalMessageInfo

func (m *GetFileRequest) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *GetFileRequest) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *GetFileRequest) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

type Application struct {
	AppName              string   `protobuf:"bytes,1,opt,name=appName,proto3" json:"appName,omitempty"`
	AppVersion           string   `protobuf:"bytes,2,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Application) Reset()         { *m = Application{} }
func (m *Application) String() string { return proto.CompactTextString(m) }
func (*Application) ProtoMessage()    {}
func (*Application) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4b068b76ab253eb, []int{4}
}

func (m *Application) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Application.Unmarshal(m, b)
}
func (m *Application) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Application.Marshal(b, m, deterministic)
}
func (m *Application) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Application.Merge(m, src)
}
func (m *Application) XXX_Size() int {
	return xxx_messageInfo_Application.Size(m)
}
func (m *Application) XXX_DiscardUnknown() {
	xxx_messageInfo_Application.DiscardUnknown(m)
}

var xxx_messageInfo_Application proto.InternalMessageInfo

func (m *Application) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *Application) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

type WatchRequest struct {
	WatcherName          string       `protobuf:"bytes,1,opt,name=watcherName,proto3" json:"watcherName,omitempty"`
	Application          *Application `protobuf:"bytes,2,opt,name=application,proto3" json:"application,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *WatchRequest) Reset()         { *m = WatchRequest{} }
func (m *WatchRequest) String() string { return proto.CompactTextString(m) }
func (*WatchRequest) ProtoMessage()    {}
func (*WatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4b068b76ab253eb, []int{5}
}

func (m *WatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchRequest.Unmarshal(m, b)
}
func (m *WatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchRequest.Marshal(b, m, deterministic)
}
func (m *WatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchRequest.Merge(m, src)
}
func (m *WatchRequest) XXX_Size() int {
	return xxx_messageInfo_WatchRequest.Size(m)
}
func (m *WatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchRequest proto.InternalMessageInfo

func (m *WatchRequest) GetWatcherName() string {
	if m != nil {
		return m.WatcherName
	}
	return ""
}

func (m *WatchRequest) GetApplication() *Application {
	if m != nil {
		return m.Application
	}
	return nil
}

type WatchResponse struct {
	Changed              bool     `protobuf:"varint,1,opt,name=changed,proto3" json:"changed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchResponse) Reset()         { *m = WatchResponse{} }
func (m *WatchResponse) String() string { return proto.CompactTextString(m) }
func (*WatchResponse) ProtoMessage()    {}
func (*WatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4b068b76ab253eb, []int{6}
}

func (m *WatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchResponse.Unmarshal(m, b)
}
func (m *WatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchResponse.Marshal(b, m, deterministic)
}
func (m *WatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchResponse.Merge(m, src)
}
func (m *WatchResponse) XXX_Size() int {
	return xxx_messageInfo_WatchResponse.Size(m)
}
func (m *WatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchResponse proto.InternalMessageInfo

func (m *WatchResponse) GetChanged() bool {
	if m != nil {
		return m.Changed
	}
	return false
}

func init() {
	proto.RegisterType((*GetConfigRequest)(nil), "grpc.GetConfigRequest")
	proto.RegisterType((*GetConfigResponse)(nil), "grpc.GetConfigResponse")
	proto.RegisterType((*GetFileResponse)(nil), "grpc.GetFileResponse")
	proto.RegisterType((*GetFileRequest)(nil), "grpc.GetFileRequest")
	proto.RegisterType((*Application)(nil), "grpc.Application")
	proto.RegisterType((*WatchRequest)(nil), "grpc.WatchRequest")
	proto.RegisterType((*WatchResponse)(nil), "grpc.WatchResponse")
}

func init() { proto.RegisterFile("vecosy.proto", fileDescriptor_f4b068b76ab253eb) }

var fileDescriptor_f4b068b76ab253eb = []byte{
	// 358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0x4d, 0x4f, 0x2a, 0x31,
	0x14, 0x7d, 0x3c, 0xde, 0x7b, 0xc0, 0x1d, 0x78, 0x4a, 0xfd, 0x9a, 0xcc, 0xc2, 0x4c, 0x1a, 0x17,
	0xba, 0x21, 0x06, 0x5c, 0xe8, 0x46, 0x63, 0x30, 0xb2, 0xd2, 0x98, 0x21, 0xd1, 0x75, 0xad, 0x17,
	0x68, 0x02, 0x6d, 0xed, 0x54, 0x88, 0xff, 0xde, 0x4c, 0xe7, 0xc3, 0x82, 0x3b, 0x5d, 0x9e, 0x33,
	0xf7, 0x9c, 0xd3, 0xde, 0x33, 0x85, 0xf6, 0x12, 0xb9, 0x4a, 0xdf, 0x7b, 0xda, 0x28, 0xab, 0xc8,
	0x9f, 0xa9, 0xd1, 0x9c, 0x4a, 0xd8, 0x1e, 0xa1, 0x1d, 0x2a, 0x39, 0x11, 0xd3, 0x04, 0x5f, 0xdf,
	0x30, 0xb5, 0x24, 0x84, 0x06, 0xd3, 0xfa, 0x9e, 0x2d, 0x30, 0xac, 0xc5, 0xb5, 0xe3, 0x56, 0x52,
	0x42, 0x72, 0x08, 0xc0, 0xb4, 0x7e, 0x44, 0x93, 0x0a, 0x25, 0xc3, 0xdf, 0xee, 0xa3, 0xc7, 0x90,
	0x18, 0x02, 0x94, 0x4b, 0x61, 0x94, 0x5c, 0xa0, 0xb4, 0x61, 0xdd, 0x0d, 0xf8, 0x14, 0xbd, 0x80,
	0xae, 0x97, 0x97, 0x6a, 0x25, 0x53, 0x24, 0x47, 0xd0, 0xe1, 0x8e, 0x19, 0x2a, 0x69, 0x33, 0x61,
	0x1e, 0xbb, 0x4e, 0xd2, 0x01, 0x6c, 0x8d, 0xd0, 0xde, 0x8a, 0x39, 0x56, 0xc2, 0x18, 0x82, 0x89,
	0x98, 0xa3, 0x2f, 0x6b, 0x27, 0x3e, 0x45, 0x27, 0xf0, 0xbf, 0x12, 0xfd, 0xf4, 0x76, 0x11, 0x34,
	0x33, 0xeb, 0x07, 0x66, 0x67, 0xc5, 0xd5, 0x2a, 0x4c, 0x47, 0x10, 0x5c, 0x6b, 0x3d, 0x17, 0x9c,
	0xd9, 0x6c, 0xf4, 0xdb, 0x21, 0x14, 0xa1, 0xfd, 0xc4, 0x2c, 0x9f, 0x95, 0xc7, 0x8d, 0x21, 0x58,
	0x65, 0x18, 0x8d, 0xe7, 0xe6, 0x53, 0x64, 0x00, 0x01, 0xfb, 0x8c, 0x76, 0x96, 0x41, 0xbf, 0xdb,
	0xcb, 0xea, 0xed, 0x79, 0x67, 0x4a, 0xfc, 0x29, 0x7a, 0x02, 0x9d, 0x22, 0xa6, 0x58, 0x65, 0x08,
	0x0d, 0x3e, 0x63, 0x72, 0x8a, 0x2f, 0x2e, 0xa3, 0x99, 0x94, 0xb0, 0x7f, 0x07, 0xc1, 0x78, 0xc1,
	0x4c, 0x51, 0x1a, 0xb9, 0x84, 0x56, 0xd5, 0x20, 0xd9, 0xcf, 0x63, 0x36, 0x7f, 0xa1, 0xe8, 0xe0,
	0x0b, 0x9f, 0xc7, 0xd0, 0x5f, 0xfd, 0x2b, 0xa8, 0x27, 0x6c, 0x45, 0xce, 0xa1, 0x51, 0x14, 0x43,
	0x76, 0xab, 0x61, 0xaf, 0xa7, 0x68, 0x6f, 0x83, 0xad, 0x0c, 0x6e, 0x8a, 0x0d, 0x8d, 0xd1, 0x2c,
	0x05, 0x47, 0x72, 0x06, 0x7f, 0x1d, 0x26, 0x24, 0x57, 0xf8, 0xeb, 0x8b, 0x76, 0xd6, 0xb8, 0xd2,
	0xe3, 0xb4, 0xf6, 0xfc, 0xcf, 0xbd, 0x82, 0xc1, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa9, 0x46,
	0x57, 0x45, 0x15, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SmartConfigClient is the client API for SmartConfig service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SmartConfigClient interface {
	GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*GetConfigResponse, error)
}

type smartConfigClient struct {
	cc *grpc.ClientConn
}

func NewSmartConfigClient(cc *grpc.ClientConn) SmartConfigClient {
	return &smartConfigClient{cc}
}

func (c *smartConfigClient) GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*GetConfigResponse, error) {
	out := new(GetConfigResponse)
	err := c.cc.Invoke(ctx, "/grpc.SmartConfig/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SmartConfigServer is the server API for SmartConfig service.
type SmartConfigServer interface {
	GetConfig(context.Context, *GetConfigRequest) (*GetConfigResponse, error)
}

// UnimplementedSmartConfigServer can be embedded to have forward compatible implementations.
type UnimplementedSmartConfigServer struct {
}

func (*UnimplementedSmartConfigServer) GetConfig(ctx context.Context, req *GetConfigRequest) (*GetConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}

func RegisterSmartConfigServer(s *grpc.Server, srv SmartConfigServer) {
	s.RegisterService(&_SmartConfig_serviceDesc, srv)
}

func _SmartConfig_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmartConfigServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.SmartConfig/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmartConfigServer).GetConfig(ctx, req.(*GetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SmartConfig_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.SmartConfig",
	HandlerType: (*SmartConfigServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfig",
			Handler:    _SmartConfig_GetConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vecosy.proto",
}

// RawClient is the client API for Raw service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RawClient interface {
	GetFile(ctx context.Context, in *GetFileRequest, opts ...grpc.CallOption) (*GetFileResponse, error)
}

type rawClient struct {
	cc *grpc.ClientConn
}

func NewRawClient(cc *grpc.ClientConn) RawClient {
	return &rawClient{cc}
}

func (c *rawClient) GetFile(ctx context.Context, in *GetFileRequest, opts ...grpc.CallOption) (*GetFileResponse, error) {
	out := new(GetFileResponse)
	err := c.cc.Invoke(ctx, "/grpc.Raw/GetFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RawServer is the server API for Raw service.
type RawServer interface {
	GetFile(context.Context, *GetFileRequest) (*GetFileResponse, error)
}

// UnimplementedRawServer can be embedded to have forward compatible implementations.
type UnimplementedRawServer struct {
}

func (*UnimplementedRawServer) GetFile(ctx context.Context, req *GetFileRequest) (*GetFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFile not implemented")
}

func RegisterRawServer(s *grpc.Server, srv RawServer) {
	s.RegisterService(&_Raw_serviceDesc, srv)
}

func _Raw_GetFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RawServer).GetFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Raw/GetFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RawServer).GetFile(ctx, req.(*GetFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Raw_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.Raw",
	HandlerType: (*RawServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFile",
			Handler:    _Raw_GetFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vecosy.proto",
}

// WatchServiceClient is the client API for WatchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WatchServiceClient interface {
	Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (WatchService_WatchClient, error)
}

type watchServiceClient struct {
	cc *grpc.ClientConn
}

func NewWatchServiceClient(cc *grpc.ClientConn) WatchServiceClient {
	return &watchServiceClient{cc}
}

func (c *watchServiceClient) Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (WatchService_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WatchService_serviceDesc.Streams[0], "/grpc.WatchService/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &watchServiceWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WatchService_WatchClient interface {
	Recv() (*WatchResponse, error)
	grpc.ClientStream
}

type watchServiceWatchClient struct {
	grpc.ClientStream
}

func (x *watchServiceWatchClient) Recv() (*WatchResponse, error) {
	m := new(WatchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// WatchServiceServer is the server API for WatchService service.
type WatchServiceServer interface {
	Watch(*WatchRequest, WatchService_WatchServer) error
}

// UnimplementedWatchServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWatchServiceServer struct {
}

func (*UnimplementedWatchServiceServer) Watch(req *WatchRequest, srv WatchService_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Watch not implemented")
}

func RegisterWatchServiceServer(s *grpc.Server, srv WatchServiceServer) {
	s.RegisterService(&_WatchService_serviceDesc, srv)
}

func _WatchService_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WatchServiceServer).Watch(m, &watchServiceWatchServer{stream})
}

type WatchService_WatchServer interface {
	Send(*WatchResponse) error
	grpc.ServerStream
}

type watchServiceWatchServer struct {
	grpc.ServerStream
}

func (x *watchServiceWatchServer) Send(m *WatchResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _WatchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.WatchService",
	HandlerType: (*WatchServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Watch",
			Handler:       _WatchService_Watch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "vecosy.proto",
}
